country <- gsub(" ", "", country)
country <- paste0("&country=", paste(country, collapse = ","))
url <- paste0(url, country)
}
if(!is.null(query)) {
query <- gsub(" ", "", query)
url <- paste0(url, "&query=", query)
}
response <- httr::GET(url, httr::add_headers(.headers = connect_info$headers))
if (response$headers$`content-type` == "application/json" && response$status_code == 200) {
json_data <- httr::content(response, as = "text", encoding = "UTF-8")
json_list <- jsonlite::fromJSON(json_data)
if(length(json_list$data) == 0){
stop("No data in this date range. Please check the order of start_date and end_date.")
}else{
news_df <- json_list$data[,c("date","country","countrysort",
"title","description","content","category","ncomments","mentions",
"source","link")]
}
return(news_df)
} else {
error <- httr::content(response, as = "text", encoding = "UTF-8")
error <- jsonlite::fromJSON(error)
if("error" %in% names(error)) {
stop(error$error)
} else if ("detail" %in% names(error)) {
stop(error$detail)
} else if ("message" %in% names(error)) {
stop(error$message)
} else {
stop("An error occured")
}
}
}
category=c("economique ")
query = c("cedeao")
country = c('ml')
# Get data
start_date <- as.Date("2024-03-01")
end_date <- as.Date("2024-03-31")
news <- get_news(connect_info, start_date, end_date, query = query,
source=NULL, category=category , country=country)
library(Rnewswacafi)
#Keys
api_key <- "8c2cf1af-c970-47dd-a3fb-9841b2e9e8ed"
api_secret <- "pot_SvtyFegiqK2YckFNfAXPgjdNtVrM8BdW_jKd-zo"
# Connection
connect_info <- api_connect(api_key = api_key, api_secret = api_secret)
# Get data
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
as.POSIXct(start_date, format="%d-%m-%Y")
news <- get_news(connect_info, start_date, end_date,
query=NULL,
source=NULL,
category=NULL,
country=NULL)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=NULL)
View(news)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=c("Politique"),
country=NULL)
get_news <- function(connect_info, start_date, end_date, query=NULL,
source=NULL, category=NULL, country=NULL) {
base_url <- connect_info$base_url
if (is.null(start_date) || is.null(end_date)) {
stop("start_date and end_date are required")
}
start_date <- as.POSIXct(start_date, format="%Y-%m-%d")
end_date <- as.POSIXct(end_date, format="%Y-%m-%d")
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
if(!is.null(source)) {
source <- gsub(" ", "", source)
source <- paste0("&source=", paste(source, collapse = ","))
url <- paste0(url, source)
}
if(!is.null(category)) {
category <- gsub(" ", "", category)
category <- paste0("&category=", paste(category, collapse = ","))
url <- paste0(url, category)
}
if(!is.null(country)) {
country <- gsub(" ", "", country)
country <- paste0("&country=", paste(country, collapse = ","))
url <- paste0(url, country)
}
if(!is.null(query)) {
query <- gsub(" ", "", query)
url <- paste0(url, "&query=", query)
}
response <- httr::GET(url, httr::add_headers(.headers = connect_info$headers))
if (response$headers$`content-type` == "application/json" && response$status_code == 200) {
json_data <- httr::content(response, as = "text", encoding = "UTF-8")
json_list <- jsonlite::fromJSON(json_data)
if(length(json_list$data) == 0){
stop("No data in this date range. Please check the order of start_date and end_date.")
}else{
news_df <- json_list$data[,c("date","country","countrysort",
"title","description","content","category","ncomments","mentions",
"source","link")]
}
return(news_df)
} else {
error <- httr::content(response, as = "text", encoding = "UTF-8")
error <- jsonlite::fromJSON(error)
if("error" %in% names(error)) {
stop(error$error)
} else if ("detail" %in% names(error)) {
stop(error$detail)
} else if ("message" %in% names(error)) {
stop(error$message)
} else {
stop("An error occured")
}
}
}
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=c("Politique"),
country=NULL)
news <- get_news(connect_info, start_date, end_date,
query=NULL,
source=NULL,
category=c("Politique"),
country=NULL)
category=c("Politique")
base_url <- connect_info$base_url
start_date <- as.POSIXct(start_date, format="%Y-%m-%d")
end_date <- as.POSIXct(end_date, format="%Y-%m-%d")
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
category <- gsub(" ", "", category)
category
category <- paste0("&category=", paste(category, collapse = ","))
category
url <- paste0(url, category)
url
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=c("Politique", "Economique"),
country=NULL)
response <- httr::GET(url, httr::add_headers(.headers = connect_info$headers))
response
? format
get_news <- function(connect_info, start_date, end_date, query=NULL,
source=NULL, category=NULL, country=NULL) {
base_url <- connect_info$base_url
if (is.null(start_date) || is.null(end_date)) {
stop("start_date and end_date are required")
}
# start_date <- as.POSIXct(start_date, format="%Y-%m-%d")
# end_date <- as.POSIXct(end_date, format="%Y-%m-%d")
start_date <- format(as.Date(start_date), "%Y-%m-%d")
end_date <- format(as.Date(end_date), "%Y-%m-%d")
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
if(!is.null(source)) {
source <- gsub(" ", "", source)
source <- paste0("&source=", paste(source, collapse = ","))
url <- paste0(url, source)
}
if(!is.null(category)) {
category <- gsub(" ", "", category)
category <- paste0("&category=", paste(category, collapse = ","))
url <- paste0(url, category)
}
if(!is.null(country)) {
country <- gsub(" ", "", country)
country <- paste0("&country=", paste(country, collapse = ","))
url <- paste0(url, country)
}
if(!is.null(query)) {
query <- gsub(" ", "", query)
url <- paste0(url, "&query=", query)
}
response <- httr::GET(url, httr::add_headers(.headers = connect_info$headers))
if (response$headers$`content-type` == "application/json" && response$status_code == 200) {
json_data <- httr::content(response, as = "text", encoding = "UTF-8")
json_list <- jsonlite::fromJSON(json_data)
if(length(json_list$data) == 0){
stop("No data in this date range. Please check the order of start_date and end_date.")
}else{
news_df <- json_list$data[,c("date","country","countrysort",
"title","description","content","category","ncomments","mentions",
"source","link")]
}
return(news_df)
} else {
error <- httr::content(response, as = "text", encoding = "UTF-8")
error <- jsonlite::fromJSON(error)
if("error" %in% names(error)) {
stop(error$error)
} else if ("detail" %in% names(error)) {
stop(error$detail)
} else if ("message" %in% names(error)) {
stop(error$message)
} else {
stop("An error occured")
}
}
}
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=c("Politique", "Economique"),
country=NULL)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf", "ml"),)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf", "ml"))
library(Rnewswacafi)
#Keys
api_key <- "8c2cf1af-c970-47dd-a3fb-9841b2e9e8ed"
api_secret <- "pot_SvtyFegiqK2YckFNfAXPgjdNtVrM8BdW_jKd-zo"
# Connection
connect_info <- api_connect(api_key = api_key, api_secret = api_secret)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf", "ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf"))
get_news <- function(connect_info, start_date, end_date, query=NULL,
source=NULL, category=NULL, country=NULL) {
base_url <- connect_info$base_url
if (is.null(start_date) || is.null(end_date)) {
stop("start_date and end_date are required")
}
# start_date <- as.POSIXct(start_date, format="%Y-%m-%d")
# end_date <- as.POSIXct(end_date, format="%Y-%m-%d")
start_date <- format(as.Date(start_date), "%Y-%m-%d")
end_date <- format(as.Date(end_date), "%Y-%m-%d")
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
if(!is.null(source)) {
source <- gsub(" ", "", source)
source <- paste0("&source=", paste(source, collapse = ","))
url <- paste0(url, source)
}
if(!is.null(category)) {
category <- gsub(" ", "", category)
category <- paste0("&category=", paste(category, collapse = ","))
url <- paste0(url, category)
}
if(!is.null(country)) {
country <- gsub(" ", "", country)
country <- paste0("&country=", paste(country, collapse = ","))
url <- paste0(url, country)
}
if(!is.null(query)) {
query <- gsub(" ", "", query)
url <- paste0(url, "&query=", query)
}
response <- httr::GET(url, httr::add_headers(.headers = connect_info$headers))
if (response$headers$`content-type` == "application/json" && response$status_code == 200) {
json_data <- httr::content(response, as = "text", encoding = "UTF-8")
json_list <- jsonlite::fromJSON(json_data)
# if(length(json_list$data) == 0){
#   stop("No data in this date range. Please check the order of start_date and end_date.")
# }else{
news_df <- json_list$data[,c("date","country","countrysort",
"title","description","content","category","ncomments","mentions",
"source","link")]
#}
return(news_df)
} else {
error <- httr::content(response, as = "text", encoding = "UTF-8")
error <- jsonlite::fromJSON(error)
if("error" %in% names(error)) {
stop(error$error)
} else if ("detail" %in% names(error)) {
stop(error$detail)
} else if ("message" %in% names(error)) {
stop(error$message)
} else {
stop("An error occured")
}
}
}
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf"))
View(news)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf","ml"))
View(news)
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf","ml"))
library(Rnewswacafi)
library(Rnewswacafi)
#Keys
api_key <- "8c2cf1af-c970-47dd-a3fb-9841b2e9e8ed"
api_secret <- "pot_SvtyFegiqK2YckFNfAXPgjdNtVrM8BdW_jKd-zo"
# Connection
connect_info <- api_connect(api_key = api_key, api_secret = api_secret)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-0-29")
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-02-29")
news <- get_news(connect_info, start_date, end_date)
View(news)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-03-01")
end_date <- as.Date("2024-03-31")
news <- get_news(connect_info, start_date, end_date)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-04-01")
end_date <- as.Date("2024-04-30")
news <- get_news(connect_info, start_date, end_date)
news_df <- as.data.frame()
news_df <- as.data.frame(NULL)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-15")
news <- get_news(connect_info, start_date, end_date)
View(news)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
news <- get_news(connect_info, start_date, end_date)
View(news)
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf"))
View(news)
#Keys
api_key <- "8c2cf1af-c970-47dd-a3fb-9841b2e9e8ed"
#Keys
api_key <- "8c2cf1af-c970-47dd-a3fb-9841b2e9e8ed"
api_secret <- "pot_SvtyFegiqK2YckFNfAXPgjdNtVrM8BdW_jKd-zo"
# Connection
connect_info <- api_connect(api_key = api_key, api_secret = api_secret)
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=NULL,
country=c("ml"))
news <- get_news(connect_info, start_date, end_date,
query=c("cedeao"),
source=NULL,
category=NULL)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=c('politique'),
category=NULL,
country=c("bf","ml"))
base_url <- connect_info$base_url
start_date <- format(as.Date(start_date), "%Y-%m-%d")
end_date <- format(as.Date(end_date), "%Y-%m-%d")
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
source=c('politique')
category
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=c('politique'),
country=c("bf","ml"))
# Get data c("Politique", "Economique"),
start_date <- as.Date("2024-01-01")
end_date <- as.Date("2024-01-31")
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=c('politique'),
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=c('politique','ECONOMIQUE'),
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=NULL,
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
category=c('politique','Economique'),
country=c("bf","ml"))
unique(news$source)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=NULL,
#category=c('politique','economique'),
country=c("bf","ml"))
unique(news$source)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=c('sidwaya.info'),
#category=c('politique','economique'),
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=c('journaldumali.com'),
#category=c('politique','economique'),
country=c("bf","ml"))
news <- get_news(connect_info, start_date, end_date,
#query=c("cedeao"),
source=c('journaldumali.com'),
category=c('economique'),
country=c("bf","ml"))
View(news)
news <- get_news(connect_info, start_date, end_date,
query=c('cedeao', 'OMC'),
source=c('journaldumali.com'),
category=c('economique'),
country=c("bf","ml"))
news <- get_news(connect_info, start_date, end_date,
query=c('OMC'),
source=c('journaldumali.com'),
category=c('economique'),
country=c("bf","ml"))
View(news)
news$content
news <- get_news(connect_info, start_date, end_date,
query=c('Moussa Alassane Diallo'),
source=c('journaldumali.com'),
category=c('economique'),
country=c("bf","ml"))
news <- get_news(connect_info, start_date, end_date,
query='Moussa Alassane Diallo',
source=c('journaldumali.com'),
category=c('economique'),
country=c("bf","ml"))
query='Moussa Alassane Diallo'
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
url
query <- gsub(" ", "", query)
query
paste0(url, "&query=", query)
url <- paste0(base_url, "/news/?start_date=", start_date, "&end_date=", end_date)
paste0(url, "&query=", query)
paste(url, "&query=", query)
query='Moussa Alassane Diallo'
paste0(url, "&query=", query)
load("F:/phd/1-Longitudinal/Review/Code/Data/synthetic/synthetic.Rdata")
View(def)
View(df)
# Package
library(devtools)
library(usethis)
library(knitr)
library(rmarkdown)
library(roxygen2)
library(pkgdown)
#library(travis)
# Definir le repository de travail
setwd("F:/DRC/DRC-Wacafi/Rnewswacafi")
usethis::use_package("utils")
# Verifier la créeation avec succés du package
devtools::document()
devtools::check()
# Verifier la créeation avec succés du package
devtools::document()
devtools::check()
# Verifier la créeation avec succés du package
devtools::document()
devtools::check()
usethis::use_vignette("Rnewswacafi")
